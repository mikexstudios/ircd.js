#!/bin/bash

CMD=$@

FRONTEND_URI=$RUPPELLS_SOCKETS_FRONTEND_URI
FRONTEND_PORT=${FRONTEND_URI##tcp://}; FRONTEND_PORT=${FRONTEND_PORT#*:}; FRONTEND_PORT=${FRONTEND_PORT%*/}

BACKEND_PORT=${BACKEND_PORT:=1337}

TUNNEL_URI=$RUPPELLS_SOCKETS_TUNNEL_URI

# MOD: Set local tunnel address (necessary since heroku doesn't use localhost)
BACKEND_HOST=${RUPPELLS_BACKEND_TUNNEL_URI:="127.0.2.1"}

# kudos - https://gist.github.com/cdown/1163649
urldecode() {
    # urldecode <string>
    local url_encoded=${1//+/ }
    printf '%b' "${url_encoded//%/\x}"
}
SSH_AUTH=${TUNNEL_URI##ssh://} ; SSH_AUTH=${SSH_AUTH%@*}
SSH_USER=${SSH_AUTH%:*}
urldecode ${SSH_AUTH#*:} > /tmp/$$.key
chmod 600 /tmp/$$.key

SSH_ENDPOINT=${TUNNEL_URI##ssh://*@}
SSH_HOST=${SSH_ENDPOINT%:*}
SSH_PORT=${SSH_ENDPOINT#*:}


function sigtermed()
{
    if [[ $VERBOSE ]] ; then echo "forwarding SIGTERM to children" ; fi
    kill -SIGTERM $CMDPID 2>/dev/null
    (sleep 10 ; kill -0 $CMDPID ; if [[ $? ]]; then kill -9 $CMDPID ; fi ; ) & KILLER_PID=$!
    wait $CMDPID 2>/dev/null
    CMDEXIT=$?
    kill $KILLER_PID 2>/dev/null
    exit $CMDEXIT
}

function finish()
{
    EXIT_CODE=$?
    kill -9 $SSHPID 2>/dev/null
    rm /tmp/$$.key
    exit $EXIT_CODE
}

trap sigtermed SIGTERM SIGINT
trap finish EXIT


if [[ -z $RUPPELLS_SKIP ]]
then
    echo -n "Connecting tcp://localhost:${BACKEND_PORT}/ to ${FRONTEND_URI}... "
    ssh -o LogLevel=quiet -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o TCPKeepAlive=yes -nN -i /tmp/$$.key -R $FRONTEND_PORT:$BACKEND_HOST:$BACKEND_PORT -l $SSH_USER $SSH_HOST $KEY_CMD -p $SSH_PORT & SSHPID=$!
    echo "done"

    echo -n "Running ${CMD}... "
    RUPPELLS_SOCKETS_LOCAL_PORT=$BACKEND_PORT $CMD & CMDPID=$!
    echo "done"
else
    echo -n "Running ${CMD}... "
    RUPPELLS_SOCKETS_LOCAL_PORT=$BACKEND_PORT $CMD
    CMDPID=$!
    echo "done"
fi

while $(kill -0 $CMDPID) && $(kill -0 $SSHPID); do
    sleep 0.5
done
